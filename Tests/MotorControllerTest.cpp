/*
 * --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 *
 *  ███╗   ███╗ ██████╗ ████████╗ ██████╗ ██████╗      ██████╗ ██████╗ ███╗   ██╗████████╗██████╗  ██████╗ ██╗     ██╗     ███████╗██████╗     ████████╗███████╗███████╗████████╗
 *  ████╗ ████║██╔═══██╗╚══██╔══╝██╔═══██╗██╔══██╗    ██╔════╝██╔═══██╗████╗  ██║╚══██╔══╝██╔══██╗██╔═══██╗██║     ██║     ██╔════╝██╔══██╗    ╚══██╔══╝██╔════╝██╔════╝╚══██╔══╝
 *  ██╔████╔██║██║   ██║   ██║   ██║   ██║██████╔╝    ██║     ██║   ██║██╔██╗ ██║   ██║   ██████╔╝██║   ██║██║     ██║     █████╗  ██████╔╝       ██║   █████╗  ███████╗   ██║
 *  ██║╚██╔╝██║██║   ██║   ██║   ██║   ██║██╔══██╗    ██║     ██║   ██║██║╚██╗██║   ██║   ██╔══██╗██║   ██║██║     ██║     ██╔══╝  ██╔══██╗       ██║   ██╔══╝  ╚════██║   ██║
 *  ██║ ╚═╝ ██║╚██████╔╝   ██║   ╚██████╔╝██║  ██║    ╚██████╗╚██████╔╝██║ ╚████║   ██║   ██║  ██║╚██████╔╝███████╗███████╗███████╗██║  ██║       ██║   ███████╗███████║   ██║
 *  ╚═╝     ╚═╝ ╚═════╝    ╚═╝    ╚═════╝ ╚═╝  ╚═╝     ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝   ╚═╝   ╚═╝  ╚═╝ ╚═════╝ ╚══════╝╚══════╝╚══════╝╚═╝  ╚═╝       ╚═╝   ╚══════╝╚══════╝   ╚═╝
 *
 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 *
 * Test Functions:
 *      Test (insert function of test):
 *          Expected behavior:
 *
 *      Test (insert function of test):
 *          Expected behavior:
 *
 */
#include <iostream>
#include "../Frameworks/Sensors/CANSensors/MotorController.cpp"

class MotorControllerTest{
public:

    MotorControllerTest(){ 
        esc = Esc(-1, -1);
        app = App(-1, -1, -1);
        MC = MotorController(&esc, &app); 
    }

    void RunTests(float exPos){
        std::cout<<"Running Motor Controller Tests"<<std::endl;
        std::cout<<"Test Get Value status: "<< ( GetPos(exPos) ? "Passed" : "Failed") <<std::endl;
    }

private:
    bool GetPos(float expectedPos){
        if((MC.getPedalPosition() - expectedPos) < 0.01)
            return true;
        return false;
    }

    Esc esc;
    App app;
    MotorController MC;
};
